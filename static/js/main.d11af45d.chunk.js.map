{"version":3,"sources":["Board.js","App.js","serviceWorker.js","index.js"],"names":["Board","props","state","data","Array","fill","myClick","bind","handleChange","rowIndex","colIndex","event","this","target","value","forceUpdate","TableContainer","component","Paper","align","Table","className","aria-label","style","borderStyle","width","tableLayout","TableBody","map","row","TableRow","element","TableCell","padding","Input","id","name","type","inputProps","min","max","textAlign","onChange","Typography","Button","variant","color","onClick","React","Component","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","paddingBottom","content","height","App","classes","Fragment","CssBaseline","Container","maxWidth","AppBar","position","Toolbar","IconButton","edge","menuButton","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d11af45d.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Board.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Input from '@material-ui/core/Input';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nclass Board extends React.Component {\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [Array(9).fill(null),\r\n                Array(9).fill(null),\r\n                Array(9).fill(null),\r\n                Array(9).fill(null),\r\n                Array(9).fill(null),\r\n                Array(9).fill(null),\r\n                Array(9).fill(null),\r\n                Array(9).fill(null),\r\n                Array(9).fill(null)],\r\n    };\r\n\r\n    this.state.data[0][0] = 6;\r\n    this.state.data[0][1] = 5;\r\n    this.state.data[0][3] = 7;\r\n    this.state.data[0][4] = 2;\r\n    this.state.data[1][5] = 6;\r\n    this.state.data[1][7] = 1;\r\n    this.state.data[2][2] = 3;\r\n    this.state.data[2][3] = 5;\r\n    this.state.data[2][5] = 1;\r\n    this.state.data[2][6] = 2;\r\n    this.state.data[2][8] = 7;\r\n    this.state.data[3][2] = 2;\r\n    this.state.data[3][3] = 4;\r\n    this.state.data[3][4] = 3;\r\n    this.state.data[4][0] = 7;\r\n    this.state.data[4][1] = 6;\r\n    this.state.data[4][2] = 8;\r\n    this.state.data[4][6] = 1;\r\n    this.state.data[4][7] = 4;\r\n    this.state.data[4][8] = 3;\r\n    this.state.data[5][4] = 1;\r\n    this.state.data[5][5] = 7;\r\n    this.state.data[5][6] = 5;\r\n\r\n    this.state.data[6][0] = 4;\r\n    this.state.data[6][2] = 5;\r\n    this.state.data[6][3] = 1;\r\n    this.state.data[6][5] = 2;\r\n    this.state.data[6][6] = 6;\r\n    this.state.data[7][1] = 8;\r\n    this.state.data[7][3] = 3;\r\n    this.state.data[8][4] = 8;\r\n    this.state.data[8][5] = 5;\r\n    this.state.data[8][7] = 3;\r\n    this.state.data[8][8] = 2;\r\n\r\n    this.myClick = this.myClick.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\nmyClick() {\r\n\r\n//alert(this.state.data);\r\n\r\n}\r\n\r\nhandleChange(rowIndex, colIndex, event) {\r\n    this.state.data[rowIndex][colIndex] = event.target.value;\r\n    this.forceUpdate();\r\n}\r\n\r\nrender() {\r\n  return (\r\n             <TableContainer component={Paper} align=\"center\">\r\n             <Table className=\"puzzle-table\" aria-label=\"a dense table\" style={{ borderStyle: 'solid', width: \"auto\", tableLayout: \"auto\" }}>\r\n             <TableBody>\r\n            {\r\n                this.state.data.map((row, rowIndex) => (\r\n                <TableRow>\r\n                {\r\n                    row.map((element, colIndex) => (\r\n                            <TableCell padding=\"none\" align=\"center\" borderStyle=\"solid\">\r\n                            <Input id={\"basic_\"+rowIndex+\"_\"+colIndex} name={\"data[\"+rowIndex+\"][\"+colIndex+\"]\"} type=\"number\"\r\n                                    inputProps={{min: 1, max:9, style: { textAlign: \"center\" }}} align=\"center\"\r\n                                    onChange={ this.handleChange.bind(this, rowIndex,colIndex) }\r\n                                    value={this.state.data[rowIndex][colIndex]} />\r\n\r\n                            </TableCell>\r\n\r\n                    ))\r\n                }\r\n                </TableRow>\r\n                ))\r\n            }\r\n            </TableBody>\r\n            </Table>\r\n            <Typography component=\"div\" align=\"right\">\r\n                <Button variant=\"contained\" color=\"primary\" onClick={this.myClick}>\r\n                  Perform\r\n                </Button>\r\n            </Typography>\r\n        </TableContainer>\r\n  );\r\n  }\r\n}\r\n\r\nexport default Board;","import React from 'react';\r\nimport './App.css';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Board from './Board';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: '#cfe8fc',\r\n    paddingBottom: 50,\r\n  },\r\n  content: {\r\n    height: '100vh',\r\n  }\r\n}));\r\n\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  return (\r\n        <React.Fragment>\r\n              <CssBaseline />\r\n              <Container maxWidth=\"lg\" >\r\n                <Typography component=\"div\" className={classes.root} >\r\n                              <AppBar position=\"static\">\r\n                                <Toolbar variant=\"dense\">\r\n                                  <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                                    <MenuIcon />\r\n                                  </IconButton>\r\n                                  <Typography variant=\"h6\" color=\"inherit\">\r\n                                    Sudoku Solver\r\n                                  </Typography>\r\n                                </Toolbar>\r\n                              </AppBar>\r\n                </Typography>\r\n                <Paper className={classes.content}>\r\n                <Board />\r\n                </Paper>\r\n              </Container>\r\n         </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}